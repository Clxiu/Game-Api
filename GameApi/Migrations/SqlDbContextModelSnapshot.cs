// <auto-generated />
using GameApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameApi.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GameApi.Model.GameInstance", b =>
                {
                    b.Property<int>("GameInstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameInstanceId"), 1L, 1);

                    b.Property<int>("ColumnSize")
                        .HasColumnType("int");

                    b.Property<bool>("GameActive")
                        .HasColumnType("bit");

                    b.Property<string>("LatestGrid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowSize")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GameInstanceId");

                    b.HasIndex("UserId");

                    b.ToTable("GameInstance");
                });

            modelBuilder.Entity("GameApi.Model.GameStep", b =>
                {
                    b.Property<int>("GameStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameStepId"), 1L, 1);

                    b.Property<int>("GameInstanceId")
                        .HasColumnType("int");

                    b.Property<int>("LastMove")
                        .HasColumnType("int");

                    b.Property<int>("NewTileColumn")
                        .HasColumnType("int");

                    b.Property<int>("NewTileExponent")
                        .HasColumnType("int");

                    b.Property<int>("NewTileRow")
                        .HasColumnType("int");

                    b.HasKey("GameStepId");

                    b.HasIndex("GameInstanceId");

                    b.ToTable("GameStep");
                });

            modelBuilder.Entity("GameApi.Model.Leaderboard", b =>
                {
                    b.Property<int>("GameLeaderboardEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameLeaderboardEntryId"), 1L, 1);

                    b.Property<int>("GameInstanceId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GameLeaderboardEntryId");

                    b.ToTable("Leaderboard");
                });

            modelBuilder.Entity("GameApi.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GameApi.Model.GameInstance", b =>
                {
                    b.HasOne("GameApi.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameApi.Model.GameStep", b =>
                {
                    b.HasOne("GameApi.Model.GameInstance", null)
                        .WithMany("GameSteps")
                        .HasForeignKey("GameInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameApi.Model.GameInstance", b =>
                {
                    b.Navigation("GameSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
